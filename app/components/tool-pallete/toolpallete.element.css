@import "../_variables.css";

:host {
  position: fixed;
  top: 0;
  left: 0;
  z-index: 99998;
  font-size: 16px;
  font-family: system-ui;
}

:host > ol {
  display: flex;
  flex-direction: column;
  margin: 1em 0 0.5em 1em;
  padding: 0;
  list-style-type: none;
  border-radius: 2em;

  &:not([colors]) {
    box-shadow: 0 0.25em 0.5em hsla(0,0%,0%,10%);
    background: var(--theme-bg);
  }
}

:host li {
  height: 2.25em;
  width: 2.25em;
  margin: 0.05em 0.25em;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;

  &:first-child { margin-top: 0.25em; }
  &:last-child { margin-bottom: 0.25em; }

  &[data-tool] {
    &:hover {
      cursor: pointer;
      background-color: var(--theme-icon_hover-bg);
    }
    &:active {
      background-color: hsl(0,0%,90%);
    }
  }

  &[data-active=true] > svg:not(.icon-cursor) {
    fill: var(--theme-color);
  }

  &[data-active=true] > .icon-cursor {
    stroke: var(--theme-color);
  }

  & > aside {
    overflow: hidden;
    position: absolute;
    left: 4em;
    top: 1em;
    z-index: -2;
    pointer-events: none;
    background: white;
    color: hsl(0,0%,30%);
    box-shadow: 0 0.1em 4.5em hsla(0,0%,0%,15%);
    border-radius: 1rem;

    transition: opacity 0.3s ease, transform 0.2s ease;
    opacity: 0;
    transform: translateX(-1em);
    will-change: transform, opacity;

    & > figure {
      margin: 0;
      display: grid;
    }

    & figcaption {
      padding: 1rem;
      display: grid;
      grid-gap: 0.5rem;

      & > :matches(h2,p) {
        margin: 0;
      }

      & > h2 {
        font-size: 1.5rem;
        line-height: 1.1;
        margin-bottom: 0.5rem;
        display: grid;
        grid-auto-flow: column;
        justify-content: space-between;
        align-items: center;
      }

      & > p {
        font-size: 0.9rem;
        line-height: 1.5;
        padding-right: 3rem;
      }

      & [table] {
        display: grid;
        grid-gap: 0.5rem;

        & > div {
          display: grid;
          grid-auto-flow: column;
          grid-template-columns: 1fr auto;
          justify-content: space-between;
        }
      }
    }

    & [hotkey] {
      border-radius: 5rem;
      height: 1.5rem;
      width: 1.5rem;
      display: inline-flex;
      align-items: center;
      justify-content: center;
      border: 1px solid var(--theme-color);
      color: var(--theme-color);
      font-weight: 300;
      font-size: 0.5em;
      text-transform: uppercase;
    }
  }

  &:hover:not([data-tool="search"]) > aside,
  &[data-tool="search"] > svg:hover + aside {
    opacity: 1;
    transform: translateX(0);
    transition-delay: 0.75s;
  }

  /*&:before {
    content: attr(aria-label) "\A" attr(aria-description);
    position: absolute;
    left: calc(100% + 0.75em);
    top: -0.5em;
    z-index: -2;
    box-shadow: 0 0.1em 0.1em hsla(0,0%,0%,20%);
    border-radius: 2em;
    height: calc(100% + 1em);
    display: inline-flex;
    align-items: center;
    padding: 0 1.5em 0 3.5em;
    background: var(--theme-color);
    color: white;
    font-weight: 300;
    font-size: 0.9em;
    white-space: pre;
    line-height: 1.3;
    transition: opacity 0.3s ease, transform 0.2s ease;
    transform: translateX(-1em);
    opacity: 0;
    pointer-events: none;
  }

  &:after {
    content: attr(aria-hotkey);
    position: absolute;
    left: calc(100% + 1.5em);
    top: 1px;
    z-index: -2;
    border-radius: 5em;
    height: 2.25em;
    width: 2.25em;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    background: white;
    color: var(--theme-color);
    font-weight: 300;
    font-size: 0.9em;
    transition: opacity 0.3s ease, transform 0.2s ease;
    transform: translateX(-1em);
    opacity: 0;
    pointer-events: none;
    text-transform: uppercase;
  }

  &:hover:before, &:hover:after {
    transform: translateX(0);
    opacity: 1;
    pointer-events: initial;
  }*/
}

:host [colors] {
  margin-top: 0;
}

:host [colors] > li {
  overflow: hidden;
  border-radius: 50%;
  box-shadow: 0 0.25em 0.5em hsla(0,0%,0%,10%);
  background: var(--theme-bg);
  margin-bottom: 0.5em;

  &:first-child {
    margin-top: 0;
  }
}

:host [colors] li:hover:after {
  top: 0;
}

:host li > svg {
  width: 50%;
  fill: var(--theme-icon_color);
}

:host li > svg.icon-cursor {
  width: 35%;
  fill: white;
  stroke: var(--theme-icon_color);
  stroke-width: 2px;
}

:host li[data-tool="search"] {
  &[data-active="true"]:before {
    transform: translateX(-1em);
    opacity: 0;
  }
}

:host li[data-tool="search"] > .search {
  position: absolute;
  left: calc(100% - 1.25em);
  top: 0;
  height: 100%;
  z-index: -1;
  box-shadow: 0 0.25em 0.5em hsla(0,0%,0%,10%);
  border-radius: 0 2em 2em 0;
  overflow: hidden;
}

:host li[data-tool="search"] > .search > input {
  border: none;
  font-size: 1em;
  padding: 0.4em 0.4em 0.4em 2em;
  outline: none;
  height: 100%;
  width: 250px;
  box-sizing: border-box;
  caret-color: hotpink;

  &::placeholder {
    font-weight: lighter;
    font-size: 0.8em;
  }
}

:host [colors] > li > svg {
  position: relative;
  top: -2px;
}

:host [colors] > li > svg > rect:last-child {
  stroke: hsla(0,0%,0%,20%);
  stroke-width: 0.5px;
}

:host input[type='color'] {
  opacity: 0.01;
  position: absolute;
  top: 0; left: 0;
  width: 100%; height: 100%;
  z-index: 1;
  box-sizing: border-box;
  border: white;
  padding: 0;
}

:host input[type='color']:focus {
  outline: none;
}

:host input[type='color']::-webkit-color-swatch-wrapper {
  padding: 0;
}

:host input[type='color']::-webkit-color-swatch {
  border: none;
}

:host input[type='color'][value='']::-webkit-color-swatch {
  background-color: transparent !important;
  background-image: linear-gradient(155deg, #ffffff 0%,#ffffff 46%,#ff0000 46%,#ff0000 54%,#ffffff 55%,#ffffff 100%);
}